{"version":3,"sources":["serviceWorker.js","components/navbar.jsx","services/logService.js","services/httpService.js","services/movieService.js","services/genreService.js","utils/paginate.js","components/common/pagination.jsx","components/common/listGroup.jsx","components/common/searchBox.jsx","components/common/like.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","services/authService.js","components/moviesTable.jsx","components/movies.jsx","components/customers.jsx","components/rentals.jsx","components/common/input.jsx","components/common/select.jsx","components/common/datePicker.jsx","components/common/form.jsx","components/movieForm.jsx","components/common/notFound.jsx","components/common/protectedRoute.jsx","components/loginForm.jsx","components/logout.jsx","services/userService.js","components/registerForm.jsx","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Navbar","user","className","Link","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","NavLink","Fragment","name","init","log","error","console","axios","defaults","baseURL","process","interceptors","response","use","status","logger","toast","Promise","reject","get","post","put","delete","setJwt","jwt","headers","common","movieUrl","getMovie","movieId","http","saveMovie","movie","_id","body","deleteMovie","getGenres","paginate","items","pageNumber","pageSize","startIndex","_","slice","take","value","Pagination","props","itemCount","currentPage","onPageChange","pagesCount","Math","ceil","pages","range","map","page","key","onClick","ListGroup","textProperty","valueProperty","selectedItem","onItemSelect","item","defaultProps","propType","PropType","array","isRequired","SearchBox","onChange","placeholder","e","currentTarget","Like","classes","liked","styles","cursor","aria-hidden","TableHeader","raiseSort","path","sortColumn","order","onSort","renderSortIcon","column","this","columns","label","Component","TableBody","renderCell","content","createKey","keyName","data","Table","email","password","a","localStorage","setItem","getJwt","getItem","login","loginWithJwt","logout","removeItem","getCurrentUser","jwtDecode","ex","MoviesTable","title","onLike","deleteColum","onDelete","auth","isAdmin","push","movies","Movies","state","genres","searchQuery","selectedGenre","handleDelete","originalMovies","filter","m","setState","handleLike","index","indexOf","handlePageChange","handleGenreSelect","genre","handleSort","handleSearch","query","getPageData","allMovies","filtered","toLowerCase","startsWith","sortBy","totalCount","length","style","marginBottom","Customers","Rentals","Input","rest","htmlFor","Select","options","option","OneDatePicker","Form","readOnly","errors","validate","Joi","schema","abortEarly","details","message","handleSubmit","preventDefault","doSubmit","handleFormMode","validateProperty","obj","onInputChange","input","errros","errorMessage","validateSingleDate","format","onDateChange","objDate","fieldName","onFocusChange","focused","calendarFocused","Object","keys","fieldLabel","placeHolder","date","numberOfMonths","isOutsideRange","fieldType","disabled","MovieForm","genreId","numberInStock","dailyRentalRate","stockedOn","moment","releasedOn","string","required","min","max","number","history","params","mapToViewModel","replace","populateGenres","populateMovie","onSubmit","renderInput","renderSelect","renderSingleDatePicker","renderButton","NotFound","ProtectedRoute","component","render","Route","Redirect","pathname","from","LoginForm","username","Logout","register","RegisterForm","userService","App","Switch","exact","ReactDOM","BrowserRouter","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.8141f05a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\n// const Navbar = (prop) => {\r\nconst Navbar = ({ user }) => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <Link className=\"nav-item nav-link\" to=\"/\">\r\n        Vidly\r\n      </Link>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <div className=\"navbar-nav\">\r\n          <NavLink className=\"nav-item nav-link\" to=\"/movies\">\r\n            Movies\r\n          </NavLink>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/customers\">\r\n            Customers\r\n          </NavLink>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/rentals\">\r\n            Rentals\r\n          </NavLink>\r\n          {!user && (\r\n            <React.Fragment>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/login\">\r\n                Login\r\n              </NavLink>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/register\">\r\n                Register\r\n              </NavLink>\r\n            </React.Fragment>\r\n          )}\r\n          {user && (\r\n            <React.Fragment>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/profile\">\r\n                {user.name}\r\n              </NavLink>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/logout\">\r\n                Logout\r\n              </NavLink>\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n    /*\r\n    <ul>\r\n      <li>\r\n        <Link to=\"/\">Vidly</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/movies\">Movies</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/customers\">Customers</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/rentals\">Rentals</Link>\r\n      </li>\r\n    </ul>\r\n    */\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","//import Raven from \"raven-js\"; // to log uncaught exceptions.  eg. Unexpected - (network down, server down, db down, bug)\r\n\r\nfunction init() {\r\n  /*\r\n  Raven.config(\"https://05323d37c9a947eba9daaaab1e6171a9@sentry.io/1249956\", {\r\n    release: 1 - 0 - 0,\r\n    environment: \"development-text\",\r\n  }).install();\r\n  */\r\n}\r\n\r\nfunction log(error) {\r\n  console.log(\"Error>>>\", error);\r\n  //Raven.captureException(error);\r\n}\r\n\r\n// export two methods as interface logging service\r\nexport default { init, log };\r\n","import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n// import auth from \"./authService\";  fixing bi-directioanl dependencies\r\nimport logger from \"./logService\";\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\n//axios.defaults.headers.common[\"x-auth-token\"] = auth.getJwt();\r\n//axios.defaults.headers.common[\"Access-Control-Allow-Origin\"] = \"*\"; //\"https://gentle-beach-57815.herokuapp.com\";\r\n//axios.defaults.headers.common[\"Access-Control-Allow-Methods\"] =\"GET, POST, PUT, DELETE,OPTIONS\";\r\n//axios.defaults.headers.common[\"Access-Control-Allow-Headers\"] = \"Origin, X-Requested-With, Content-Type, Accept\";\r\n//axios.interceptors.response.use(success, error);  // log success response\r\naxios.interceptors.response.use(null, (error) => {\r\n  // handle unexpected error globally\r\n  // Expected - (404: Not found, 400: Bad request) - CLIENTS ERROR\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status <= 500;\r\n\r\n  if (!expectedError) {\r\n    // Unexpected - (network down, server down, db down, bug)\r\n    //console.log(\"Logging the error\", error);\r\n    //alert(\"An unexpected error occured\");\r\n    logger.log(error);\r\n    //toast.error(\"An unexpected error occured\"); // use as object\r\n    toast(\"An unexpected error occured\"); // use as function\r\n  }\r\n\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport function setJwt(jwt) {\r\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\r\n}\r\n\r\n// export as object\r\nexport default {\r\n  get: axios.get, // get data\r\n  post: axios.post, // create data\r\n  put: axios.put, // update data\r\n  delete: axios.delete, // delete data\r\n  setJwt,\r\n};\r\n","import http from \"./httpService\";\r\n//import { apiUrl } from \"../config.json\";\r\n//import { getGenres } from \"./genreService\";\r\n\r\nfunction movieUrl(id) {\r\n  //return apiUrl + \"/movies/\" + id;\r\n  //return `${apiUrl}/movies/${id}`;\r\n  return `/movies/${id}`;\r\n}\r\n\r\nexport function getMovies() {\r\n  // get movies with http response.data\r\n  //return http.get(apiUrl + \"/Movies\");\r\n  return http.get(\"/Movies\");\r\n}\r\n\r\nexport function getMovie(movieId) {\r\n  //console.log(\"movieId >>>>>>>\" + movieId);\r\n  //return http.get(apiUrl + \"/movies/\" + movieId);\r\n  return http.get(movieUrl(movieId));\r\n}\r\n\r\nexport function saveMovie(movie) {\r\n  if (movie._id) {\r\n    // update it\r\n    const body = { ...movie };\r\n    delete body._id; // remove _id from movie object so that no found in request body and in url\r\n    return http.put(movieUrl(movie._id), body);\r\n  }\r\n\r\n  // or create it\r\n  //return http.post(apiUrl + \"/movies\", movie); // send back newly created data:post as response.data\r\n  return http.post(\"/movies\", movie);\r\n}\r\n\r\nexport function deleteMovie(movieId) {\r\n  return http.delete(movieUrl(movieId));\r\n  /* this is from array n fakeMovieService.js\r\n  let movieInDb = movies.find((m) => m._id === id);\r\n  movies.splice(movies.indexOf(movieInDb), 1);\r\n  //console.log(\"Deleted \" + movieInDb._id + \">>>>>\" + movieInDb.title);\r\n  return movieInDb;\r\n  */\r\n}\r\n","import http from \"./httpService\";\r\n//import config from \"../common/config.json\";\r\n//import { apiUrl } from \"../config.json\";\r\n//const apiEndPointGenres = \"http://localhost:3900/api/genres\";\r\n\r\nexport function getGenres() {\r\n  // get genres with http response.data\r\n  //return http.get(\"http://localhost:3900/api/genres\");\r\n  return http.get(\"/Genres\");\r\n}\r\n\r\n//export getGenres = async () => {   // could not import\r\n/*\r\nexport async function getGenres() {\r\n  // get genres with http response.data\r\n  const { data: genres } = await http.get(config.apiEndPointGenres);\r\n  console.log(\">>>>>>>>>>>>>>>>>>>>>>>>> 1\");\r\n  console.log(genres);\r\n  console.log(\">>>>>>>>>>>>>>>>>>>>>>>>> 2\");\r\n  return genres.filter((g) => g.name);\r\n}\r\n*/\r\n","import _ from \"lodash\"; // underscore (popular js)\r\n\r\n// paginate data on client size\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  return _(items) // chain lodash method as below\r\n    .slice(startIndex) // slice array from startIndex\r\n    .take(pageSize) // tkae the number of items\r\n    .value(); // convert back to primitive array\r\n  //_.slice(items, startIndex);\r\n  //-.take(pageSize)\r\n  // _.value()\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport _ from \"lodash\"; // underscore (popular js)\r\n\r\n// stateless functional component\r\n// itemCount: total records\r\n// pageSize: total number of records per page\r\n// event: onPageChange\r\n\r\nconst Pagination = props => {\r\n  const { itemCount, pageSize, currentPage, onPageChange } = props; // code restructing\r\n  const pagesCount = Math.ceil(itemCount / pageSize); // get numbr of pages\r\n  if (pagesCount === 1) return null;\r\n  const pages = _.range(1, pagesCount + 1); // an array of pages\r\n\r\n  //console.log(\"current page >>>\", currentPage);\r\n  return (\r\n    <nav aria-label=\"Page navigation example\">\r\n      <ul className=\"pagination\">\r\n        {pages.map(page => (\r\n          <li\r\n            key={page}\r\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\r\n          >\r\n            <a className=\"page-link\" onClick={() => onPageChange(page)}>\r\n              {page}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  itemCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Pagination;\r\n\r\n/*\r\nclass Pagination extends Component {\r\n  render() {\r\n    return (\r\n     \r\n    );\r\n  }\r\n}\r\nexport default Pagination;\r\n*/\r\n","import React from \"react\";\r\nimport PropType from \"prop-types\";\r\n\r\nconst ListGroup = props => {\r\n  const {\r\n    items,\r\n    textProperty,\r\n    valueProperty,\r\n    selectedItem,\r\n    onItemSelect\r\n  } = props;\r\n  return (\r\n    <ul className=\"ListGroup\">\r\n      {items.map(item => (\r\n        <li\r\n          key={item[valueProperty]}\r\n          className={\r\n            item === selectedItem ? \"list-group-item active\" : \"list-group-item\"\r\n          }\r\n          onClick={() => onItemSelect(item)}\r\n        >\r\n          {item[textProperty]}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\n// defaultProps make it generic for most object using name and _id, but can override if different\r\nListGroup.defaultProps = {\r\n  textProperty: \"name\",\r\n  valueProperty: \"_id\"\r\n};\r\n\r\nListGroup.propType = {\r\n  items: PropType.array.isRequired,\r\n  onItemSelect: PropType.array.isRequired\r\n};\r\n\r\nexport default ListGroup;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({ value, onChange }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <input\r\n        type=\"text\"\r\n        name=\"search\"\r\n        value={value}\r\n        className=\"form-control my-3\"\r\n        placeholder=\"Search ...\"\r\n        onChange={(e) => onChange(e.currentTarget.value)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\n\r\n// Input: Liked boolean\r\n// event: onClick\r\n// turn it to fucntional component because no state, no method etc\r\nconst Like = props => {\r\n  let classes = \"fa fa-heart\";\r\n  if (!props.liked) classes += \"-o\";\r\n  return (\r\n    <i\r\n      onClick={props.onClick}\r\n      styles={{ cursor: \"pointer\" }}\r\n      className={classes}\r\n      aria-hidden=\"true\"\r\n    ></i>\r\n  );\r\n};\r\n\r\nexport default Like;\r\n","import React, { Component } from \"react\";\r\n// columns: array\r\n// sortColumn: object\r\n// onSort: function\r\n\r\nclass TableHeader extends Component {\r\n  raiseSort = path => {\r\n    //console.log(path);\r\n    // if same path, then reverse the sort\r\n    const sortColumn = { ...this.props.sortColumn };\r\n    if (sortColumn.path === path) {\r\n      //console.log(\">>>>>> 1.0\", sortColumn.order);\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n      //console.log(\">>>>>> 1.1\", sortColumn.order);\r\n    } else {\r\n      sortColumn.path = path;\r\n      sortColumn.order = \"asc\";\r\n      //console.log(\">>>>>> 2\");\r\n    }\r\n    this.props.onSort(sortColumn);\r\n  };\r\n\r\n  renderSortIcon = column => {\r\n    const { sortColumn } = this.props;\r\n    if (column.path !== sortColumn.path) return null;\r\n    if (sortColumn.order === \"asc\")\r\n      return <i className=\"fa fa-sort-asc\" aria-hidden=\"true\"></i>;\r\n    return <i className=\"fa fa-sort-desc\" aria-hidden=\"true\"></i>;\r\n  };\r\n  render() {\r\n    return (\r\n      <thead className=\" thead-dark\">\r\n        <tr>\r\n          {this.props.columns.map(column => (\r\n            <th\r\n              className=\"clickable\"\r\n              key={column.path || column.key}\r\n              onClick={() => this.raiseSort(column.path)}\r\n            >\r\n              {column.label} {this.renderSortIcon(column)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nclass TableBody extends Component {\r\n  renderCell = (item, column) => {\r\n    // if got content element\r\n    if (column.content) return column.content(item);\r\n\r\n    return _.get(item, column.path);\r\n  };\r\n\r\n  createKey = (item, column) => {\r\n    return item[this.props.keyName] + (column.path || column.key);\r\n  };\r\n\r\n  render() {\r\n    const { data, columns, keyName } = this.props;\r\n    return (\r\n      <tbody>\r\n        {data.map((item) => (\r\n          <tr key={item[keyName]}>\r\n            {columns.map((column) => (\r\n              <td key={this.createKey(item, column)}>\r\n                {this.renderCell(item, column)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import React from \"react\";\r\nimport TableHeader from \"./tableHeader\";\r\nimport TableBody from \"./tableBody\";\r\n\r\n// another way of object restructuring, no need to use const\r\nconst Table = ({ columns, data, sortColumn, onSort }) => {\r\n  //const Table = props => {\r\n  //const { columns, data, sortColumn, onSort } = props;\r\n  return (\r\n    <table className=\"table table-striped\">\r\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\r\n      <TableBody columns={columns} data={data} keyName={\"_id\"} />\r\n\r\n      {/* <tbody>\r\n      {movies.map(movie => (\r\n        <tr key={movie._id}>\r\n          <td>{movie.title}</td>\r\n          <td>{movie.genre.name}</td>\r\n          <td>{movie.numberInStock}</td>\r\n          <td>{movie.dailyRentalRate}</td>\r\n          <td>\r\n            <Like liked={movie.liked} onClick={() => onLike(movie)} />\r\n          </td>\r\n          <td>\r\n            <button\r\n              onClick={() => onDelete(movie)}\r\n              className=\"btn btn-danger btn-sm fa fa-trash-o\"\r\n            >\r\n              Delete\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      ))}\r\n    </tbody> */}\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import http from \"./httpService\";\r\nimport jwtDecode from \"jwt-decode\";\r\n//import { apiUrl } from \"../config.json\";  use environment variable\r\n\r\nconst apiEndPoint = \"/auth\"; //apiUrl + \"/auth\";\r\nconst tokenKey = \"token\";\r\n\r\nhttp.setJwt(getJwt()); // fixing bi-directional dependencies\r\n\r\nexport async function login(email, password) {\r\n  const { data: jwt } = await http.post(apiEndPoint, { email, password });\r\n  localStorage.setItem(tokenKey, jwt); // localStorage available to all browser\r\n}\r\n\r\nexport function loginWithJwt(jwt) {\r\n  // for Registration Form\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport function getCurrentUser() {\r\n  try {\r\n    // authenticared user with valid jwt\r\n    const jwt = localStorage.getItem(tokenKey);\r\n    return jwtDecode(jwt);\r\n  } catch (ex) {\r\n    // anonymous user\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function getJwt() {\r\n  return localStorage.getItem(tokenKey);\r\n}\r\n\r\n// export as object\r\nexport default {\r\n  login,\r\n  loginWithJwt,\r\n  logout,\r\n  getCurrentUser,\r\n  getJwt,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Like from \"./common/like\";\r\nimport Table from \"./common/table\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass MoviesTable extends Component {\r\n  // simple property: no need state\r\n  columns = [\r\n    {\r\n      path: \"title\",\r\n      label: \"Title\",\r\n      content: (movie) => (\r\n        <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\r\n      ),\r\n    },\r\n    { path: \"genre.name\", label: \"Genre\" },\r\n    { path: \"numberInStock\", label: \"Stock\" },\r\n    { path: \"dailyRentalRate\", label: \"Rate\" },\r\n    {\r\n      key: \"like\",\r\n      content: (movie) => (\r\n        <Like liked={movie.liked} onClick={() => this.props.onLike(movie)} />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  deleteColum = {\r\n    key: \"Delete\",\r\n    content: (movie) => (\r\n      <button\r\n        onClick={() => this.props.onDelete(movie)}\r\n        className=\"btn btn-danger btn-sm fa fa-trash-o\"\r\n      >\r\n        Delete\r\n      </button>\r\n    ),\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    const user = auth.getCurrentUser();\r\n    if (user && user.isAdmin) {\r\n      this.columns.push(this.deleteColum);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { movies, onSort, sortColumn } = this.props;\r\n    return (\r\n      <Table\r\n        columns={this.columns}\r\n        data={movies}\r\n        sortColumn={sortColumn}\r\n        onSort={onSort}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesTable;\r\n","import React, { Component } from \"react\";\r\n//import { getMovies } from \"../services/fakeMovieService\";\r\nimport { getMovies, deleteMovie } from \"../services/movieService\";\r\n//import { getGenres } from \"../services/fakeGenreService\";\r\nimport { getGenres } from \"../services/genreService\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport Pagination from \"./common/pagination\";\r\n//import Filtering from \"./common/filtering\";\r\nimport ListGoup from \"./common/listGroup\";\r\nimport SearchBox from \"./common/searchBox\";\r\nimport MoviesTable from \"./moviesTable\";\r\nimport _ from \"lodash\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [],\r\n    genres: [],\r\n    currentPage: 1,\r\n    pageSize: 4,\r\n    searchQuery: \"\", // controlled component, if set to null, React think that it change controlled to uncontrolled conponent\r\n    selectedGenre: null,\r\n    sortColumn: { path: \"title\", order: \"asc\" },\r\n  };\r\n\r\n  async componentDidMount() {\r\n    // perfect place to get data from services\r\n    const { data } = await getGenres();\r\n    const genres = [{ _id: \"\", name: \"All Gendres\" }, ...data];\r\n    const { data: movies } = await getMovies();\r\n    this.setState({ movies, genres });\r\n    //this.setState({ movies: getMovies(), genres });\r\n\r\n    /*\r\n    const movies = getMovies();\r\n    const genres = _.sortedUniq(movies.map(m => m.genre));\r\n    this.setState({ movies, genres });\r\n    */\r\n  }\r\n\r\n  handleDelete = async (movie) => {\r\n    //console.log(movie);\r\n    // delete from front end first\r\n    const originalMovies = this.state.movies;\r\n    const movies = originalMovies.filter((m) => m._id !== movie._id); // filter all movies except this movie to be deleted\r\n    this.setState({ movies }); //this.setState({ movies: movies });  same variable name\r\n\r\n    // delete from backend\r\n    try {\r\n      await deleteMovie(movie._id);\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404) {\r\n        toast.error(\"This movie has already been deleted\");\r\n      }\r\n      this.setState({ movies: originalMovies });\r\n    }\r\n  };\r\n\r\n  handleLike = (movie) => {\r\n    console.log(\"liked is clicked\", movie);\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n    movies[index] = { ...movie };\r\n    movies[index].liked = !movies[index].liked;\r\n    this.setState({ movies });\r\n  };\r\n\r\n  handlePageChange = (page) => {\r\n    // console.log(page);\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleGenreSelect = (genre) => {\r\n    //console.log(\"genre >>>\", genre);\r\n    // note: searchQuery to \"\" because searchQuery is controlled component\r\n    this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1 });\r\n  };\r\n\r\n  handleSort = (sortColumn) => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  handleSearch = (query) => {\r\n    //console.log(\">>>>>>>>>\");\r\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\r\n  };\r\n\r\n  getPageData = () => {\r\n    const {\r\n      currentPage,\r\n      pageSize,\r\n      sortColumn,\r\n      movies: allMovies,\r\n      selectedGenre,\r\n      searchQuery,\r\n    } = this.state;\r\n\r\n    let filtered = allMovies;\r\n    if (searchQuery) {\r\n      filtered = allMovies.filter((m) =>\r\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    } else if (selectedGenre && selectedGenre._id) {\r\n      filtered = allMovies.filter((m) => m.genre._id === selectedGenre._id);\r\n    }\r\n    //console.log(\"rendered sortColumn.order >>>\", sortColumn.order);\r\n    const sorted = _.sortBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n    const movies = paginate(sorted, currentPage, pageSize); // get all movies for current page\r\n\r\n    return { totalCount: filtered.length, data: movies };\r\n  };\r\n\r\n  render() {\r\n    //const { length: count } = this.state.movies;\r\n    const { currentPage, pageSize, sortColumn } = this.state;\r\n    const { user } = this.props;\r\n\r\n    // \"All Genres\" has _id==1\r\n    // if (count === 0) return <p>There are no movies in database</p>;\r\n    const { totalCount, data: movies } = this.getPageData();\r\n    return (\r\n      <main className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-3\">\r\n            <ListGoup\r\n              items={this.state.genres}\r\n              selectedItem={this.state.selectedGenre}\r\n              //textProperty={\"name\"} because using defaultProps\r\n              //valueProperty={\"_id\"}\r\n              onItemSelect={this.handleGenreSelect}\r\n            />\r\n          </div>\r\n          <div className=\"col\">\r\n            {user && (\r\n              <Link\r\n                to=\"/movies/new\"\r\n                className=\"btn btn-primary\"\r\n                style={{ marginBottom: 20 }}\r\n              >\r\n                New Movie\r\n              </Link>\r\n            )}\r\n\r\n            <p>Showing {totalCount} movies in the database</p>\r\n\r\n            <SearchBox\r\n              value={this.state.searchQuery}\r\n              onChange={this.handleSearch}\r\n            />\r\n\r\n            <MoviesTable\r\n              movies={movies}\r\n              sortColumn={sortColumn}\r\n              onLike={this.handleLike}\r\n              onDelete={this.handleDelete}\r\n              onSort={this.handleSort}\r\n            />\r\n            <Pagination\r\n              itemCount={totalCount}\r\n              pageSize={pageSize}\r\n              currentPage={currentPage}\r\n              onPageChange={this.handlePageChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","import React from \"react\";\r\n\r\nconst Customers = (props) => {\r\n  return <h1>Customers</h1>;\r\n};\r\n\r\nexport default Customers;\r\n","import React from \"react\";\r\n\r\nconst Rentals = () => {\r\n  return <h1>Rentals</h1>;\r\n};\r\n\r\nexport default Rentals;\r\n","import React from \"react\";\r\n\r\n// object restructuring of props and using rest operator to get the rest of properties\r\nconst Input = ({ label, name, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input {...rest} name={name} id={name} className=\"form-control\" />\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n\r\n  /* before using ... rest\r\nconst Input = ({ type, label, name, value, error, onChange }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        id={name}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        type={type}\r\n        className=\"form-control\"\r\n      />\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n  */\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\n// object restructuring of props and using rest operator to get the rest of properties\r\nconst Select = ({ label, name, placeholder, options, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select {...rest} name={name} id={name} className=\"form-control\">\r\n        <option value=\"\">{placeholder}</option>\r\n        {options.map((option) => (\r\n          <option key={option._id} value={option._id}>\r\n            {option.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React from \"react\";\r\nimport { SingleDatePicker, DateRangePicker } from \"react-dates\";\r\n\r\n// object restructuring of props and using rest operator to get the rest of properties\r\nexport const OneDatePicker = ({ label, name, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <br></br>\r\n      <SingleDatePicker {...rest} id={name} />\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n\r\n  /*  before refactoring\r\n    return(\r\n      <React.Fragment>\r\n    <SingleDatePicker\r\n      //date={this.state.data.createdAt}\r\n      //onDateChange={date => {data[\"createdAt\"]=date; this.setState({data})}} \r\n      //placeholder=\"Stock date\"\r\n      date={this.state.data.stockedOn}\r\n      onDateChange={(date) => {\r\n        data[\"stockedOn\"] = date;\r\n        this.setState({ data });\r\n      }}\r\n      focused={this.state.calendarFocused.stockedOn}\r\n      //onFocusChange={this.onFocusChange}\r\n      onFocusChange={(focused) => {\r\n        //get the value (true/false) of focused object that contains { focused: false }\r\n        const key = Object.keys(focused)[0];\r\n        calendarFocused[\"stockedOn\"] = focused[key];\r\n        this.setState({ calendarFocused });\r\n      }}\r\n      numberOfMonths={1}\r\n      isOutsideRange={() => false}\r\n      id=\"stockedOn\"\r\n    /> \r\n    {errors[fieldName] && <div className=\"alert alert-danger\">{errors[fieldName]}</div>}\r\n    </React.Fragment>) \r\n    */\r\n};\r\n\r\nexport const RangeDatePicker = ({ label, name, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <br></br>\r\n      <DateRangePicker {...rest} id={name} />\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\n//export default OneDatePicker;\r\n//export default RangeDatePicker\r\n","import React, { Component } from \"react\";\r\nimport Input from \"./input\";\r\nimport Select from \"./select\";\r\nimport { OneDatePicker } from \"./datePicker\";\r\nimport Joi from \"joi-browser\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    readOnly: \"\",\r\n    data: {},\r\n    errors: {},\r\n  };\r\n\r\n  validate = () => {\r\n    // object restructing result.error\r\n    const options = { abortEarly: false };\r\n\r\n    const { error } = Joi.validate(this.state.data, this.schema, options);\r\n    if (!error) return;\r\n    //console.log(\"Form Error(s): \", error);\r\n    const errors = {};\r\n    for (let item of error.details) {\r\n      errors[item.path[0]] = item.message;\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault(); // prevent re-submit the form for this event\r\n\r\n    //const username = this.username.current.value;  another way to get field value\r\n    const errors = this.validate();\r\n    // console.log(errors);\r\n    this.setState({ errors: errors || {} }); // if any errors, set errors other set {} empty object\r\n\r\n    // if any error, stop to calling server\r\n    if (errors) return;\r\n\r\n    this.doSubmit();\r\n  };\r\n\r\n  handleFormMode = () => {\r\n    console.log(\">>>>>>>>>>>>>>>>>. change form mode\");\r\n    // https://stackoverflow.com/questions/46093596/change-readonly-attribute-of-input-element-reactjs\r\n    //this.setState((prevState) => ({ readOnly: !prevState.readOnly }));\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    // name , value is object restructing of e.curretnTarget\r\n    // field validation\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    // object restructing result.error\r\n    const { error } = Joi.validate(obj, schema);\r\n    //if (!error) return null;\r\n    //return error.details[0].message;\r\n    return error || \"\" ? error.details[0].message : null;\r\n  };\r\n\r\n  onInputChange = ({ currentTarget: input }) => {\r\n    // input is e.currentTarget\r\n    // eg.  input.name === username\r\n    const errors = { ...this.state.errros };\r\n    const errorMessage = this.validateProperty(input);\r\n    if (errorMessage) {\r\n      errors[input.name] = errorMessage;\r\n    } else {\r\n      delete errors[input.name];\r\n    }\r\n\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  validateSingleDate = (name, value) => {\r\n    // name:  fieldName of date\r\n    // value: date object of moment, must be a number of milliseconds or valid date string\r\n    const obj = { [name]: value.format(\"MM/DD/YYYY\") };\r\n    const schema = { [name]: this.schema[name] };\r\n    // object restructing result.error\r\n    const { error } = Joi.validate(obj, schema);\r\n    //if (!error) return null;\r\n    //return error.details[0].message;\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  onDateChange = (objDate, { fieldName }) => {\r\n    // objDate is moment date object\r\n    const errors = { ...this.state.errros };\r\n    const errorMessage = this.validateSingleDate(fieldName, objDate);\r\n    if (errorMessage) {\r\n      errors[fieldName] = errorMessage;\r\n    } else {\r\n      delete errors[fieldName];\r\n    }\r\n\r\n    const data = { ...this.state.data };\r\n    if (objDate) {\r\n      data[fieldName] = objDate; // use field name\r\n      this.setState({ data, errors });\r\n      //this.setState({ company }, () => this.onValidCompanyInfo())\r\n    }\r\n  };\r\n\r\n  onFocusChange = (focused, { fieldName }) => {\r\n    const calendarFocused = { ...this.state };\r\n    //get the value (true/false) of focused object that contains { focused: false }\r\n    const key = Object.keys(focused)[0];\r\n    calendarFocused[fieldName] = focused[key];\r\n    this.setState({ calendarFocused });\r\n  };\r\n\r\n  renderSingleDatePicker(fieldName, fieldLabel, placeHolder) {\r\n    // single date picker\r\n    const { data, calendarFocused, errors, readOnly } = this.state;\r\n    //console.log (\"field (\" + fieldName + \")   >>> has date >>>\" + moment(data[fieldName]).format(\"DD/MM/YYYY\") )\r\n\r\n    return (\r\n      <OneDatePicker\r\n        placeholder={placeHolder}\r\n        name={fieldName}\r\n        label={fieldLabel}\r\n        date={data[fieldName]}\r\n        onDateChange={(date) => this.onDateChange(date, { fieldName })}\r\n        focused={calendarFocused[fieldName]}\r\n        onFocusChange={(focused) => this.onFocusChange(focused, { fieldName })}\r\n        numberOfMonths={1}\r\n        isOutsideRange={() => false}\r\n        id={fieldName}\r\n        readOnly\r\n        error={errors[fieldName]}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderInput(fieldName, fieldLabel, placeHolder, fieldType = \"text\") {\r\n    // input field\r\n    const { data, errors, readOnly } = this.state;\r\n    return (\r\n      <Input\r\n        placeholder={placeHolder}\r\n        type={fieldType}\r\n        name={fieldName}\r\n        value={data[fieldName]}\r\n        label={fieldLabel}\r\n        onChange={this.onInputChange}\r\n        readOnly={readOnly}\r\n        error={errors[fieldName]}\r\n      ></Input>\r\n    );\r\n  }\r\n\r\n  renderSelect(fieldName, fieldLabel, placeHolder, options) {\r\n    // select field\r\n    const { data, errors, readOnly } = this.state;\r\n    return (\r\n      <Select\r\n        placeholder={placeHolder}\r\n        name={fieldName}\r\n        value={data[fieldName]}\r\n        label={fieldLabel}\r\n        options={options}\r\n        onChange={this.onInputChange}\r\n        readOnly={readOnly}\r\n        error={errors[fieldName]}\r\n      ></Select>\r\n    );\r\n  }\r\n\r\n  renderButton(label) {\r\n    return (\r\n      <button disabled={this.validate()} className=\"btn btn-primary\">\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport Form from \"./common/form\";\r\n//import Joi from \"joi-browser\";\r\nimport Joi from \"joi-full\";\r\n\r\n//import { saveMovie, getMovie } from \"../services/fakeMovieService\";\r\nimport { saveMovie, getMovie } from \"../services/movieService\";\r\n//import { getGenres } from \"../services/fakeGenreService\";\r\nimport { getGenres } from \"../services/genreService\";\r\nimport moment from \"moment\";\r\n//import { SingleDatePicker } from \"react-dates\";\r\n\r\nclass MovieForm extends Form {\r\n  state = {\r\n    data: {\r\n      title: \"\",\r\n      genreId: \"\",\r\n      numberInStock: \"\",\r\n      dailyRentalRate: \"\",\r\n      stockedOn: moment(),\r\n      releasedOn: moment(),\r\n    },\r\n    genres: [],\r\n    errors: {},\r\n    calendarFocused: {\r\n      stockedOn: false,\r\n      releasedOn: false,\r\n    },\r\n  };\r\n\r\n  // use .empty() or allow[\"\", null] to allow empty string\r\n  schema = {\r\n    _id: Joi.string(),\r\n    //title: Joi.string().required().label(\"Title\"),\r\n    title: Joi.string().required().min(1).max(50).label(\"Title\"),\r\n    // .error(new Error(\"Was REALLY expecting a string\")),\r\n    genreId: Joi.string().required().label(\"Genre\"),\r\n    numberInStock: Joi.number()\r\n      .required()\r\n      .min(0)\r\n      .max(100)\r\n      .label(\"Number in Stock\"),\r\n    dailyRentalRate: Joi.number()\r\n      .required()\r\n      .min(0)\r\n      .max(10)\r\n      .label(\"Daily Rental Rate\"),\r\n    stockedOn: Joi.date().format(\"MM/DD/YYYY\").required().label(\"Stocked On\"),\r\n    releasedOn: Joi.date().format(\"MM/DD/YYYY\").required().label(\"Released On\"),\r\n  };\r\n\r\n  async populateGenres() {\r\n    const { data: genres } = await getGenres();\r\n    this.setState({ genres });\r\n  }\r\n\r\n  async populateMovie() {\r\n    try {\r\n      const movieId = this.props.match.params.id;\r\n      if (movieId === \"new\") return;\r\n\r\n      const { data: movie } = await getMovie(movieId);\r\n      this.setState({ data: this.mapToViewModel(movie) });\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        this.props.history.replace(\"/not-found\");\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.populateGenres();\r\n    await this.populateMovie();\r\n    // here to set form mode\r\n    this.setState({ readOnly: false });\r\n    /*\r\n    const schema = Joi.object({\r\n      foo: Joi.number()\r\n        .min(0)\r\n        .error((errors) => {\r\n          return new Error(\r\n            \"found errors with \" +\r\n              errors\r\n                .map(\r\n                  (err) =>\r\n                    `${err.local.key}(${err.local.limit}) with value ${err.local.value}`\r\n                )\r\n                .join(\" and \")\r\n          );\r\n        }),\r\n    });\r\n    const err = schema.validate({ foo: -2 }); // returns new Error('found errors with foo(0) with value -2')\r\n    console.log(\">>>>>>>>>>>>>>\", err);\r\n    */\r\n  }\r\n\r\n  mapToViewModel(movie) {\r\n    return {\r\n      _id: movie._id,\r\n      title: movie.title,\r\n      genreId: movie.genre._id,\r\n      numberInStock: movie.numberInStock,\r\n      dailyRentalRate: movie.dailyRentalRate,\r\n      stockedOn: moment(movie.stockedOn),\r\n      releasedOn: moment(movie.releasedOn),\r\n    };\r\n  }\r\n\r\n  doSubmit = async () => {\r\n    await saveMovie(this.state.data);\r\n\r\n    this.props.history.push(\"/movies\");\r\n  };\r\n\r\n  render() {\r\n    //const { data, calendarFocused } = { ...this.state };\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Movie Form</h1>\r\n        <form onSubmit={this.handleSubmit} readOnly={this.state.readOnly}>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8\">\r\n              {this.renderInput(\"title\", \"Title\", \"Movie title\")}\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n              {this.renderSelect(\r\n                \"genreId\",\r\n                \"Genre\",\r\n                \"Select a genre\",\r\n                this.state.genres\r\n              )}\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              {this.renderInput(\r\n                \"numberInStock\",\r\n                \"Number in Stock\",\r\n                \"Available in stock\",\r\n                \"number\"\r\n              )}\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              {this.renderInput(\r\n                \"dailyRentalRate\",\r\n                \"Rate\",\r\n                \"Rating of favorite\"\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n              {this.renderSingleDatePicker(\r\n                \"stockedOn\",\r\n                \"Stocked On\",\r\n                \"Stocked Date\"\r\n              )}\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              {this.renderSingleDatePicker(\r\n                \"releasedOn\",\r\n                \"Released On\",\r\n                \"Released Date\"\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/*}\r\n          <SingleDatePicker\r\n            //date={this.state.stockedOn}\r\n            //onDateChange={this.onDateChange}\r\n            date={this.state.data.stockedOn}\r\n            onDateChange={(date) => {\r\n              data[\"stockedOn\"] = date;\r\n              this.setState({ data });\r\n            }}\r\n            focused={this.state.calendarFocused.stockedOn}\r\n            //onFocusChange={this.onFocusChange}\r\n            onFocusChange={(focused) => {\r\n              //get the value (true/false) of focused object that contains { focused: false }\r\n              const key = Object.keys(focused)[0];\r\n              calendarFocused[\"stockedOn\"] = focused[key];\r\n              this.setState({ calendarFocused });\r\n            }}\r\n            numberOfMonths={1}\r\n            isOutsideRange={() => false}\r\n            id=\"stockedOn\"\r\n          />\r\n          <SingleDatePicker\r\n            date={this.state.data.releasedOn}\r\n            onDateChange={(date) => {\r\n              data[\"releasedOn\"] = date;\r\n              this.setState({ data });\r\n            }}\r\n            focused={this.state.calendarFocused.releasedOn}\r\n            onFocusChange={(focused) => {\r\n              //get the value (true/false) of focused object that contains { focused: false }\r\n              const key = Object.keys(focused)[0];\r\n              calendarFocused[\"releasedOn\"] = focused[key];\r\n              this.setState({ calendarFocused });\r\n            }}\r\n            numberOfMonths={1}\r\n            isOutsideRange={() => false}\r\n            id=\"releasedOn\"\r\n          />\r\n          */}\r\n          {this.renderButton(\"Save\")}\r\n          {/*<button onClick={this.handleFormMode}>Toggle</button>*/}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieForm;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return <h1>Sorry!!! Page not found</h1>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport auth from \"../../services/authService\";\r\n\r\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\r\n  const user = auth.getCurrentUser();\r\n  return (\r\n    <Route\r\n      {...rest} // other props\r\n      //path={path}  // simpifly  with ... rest\r\n      render={(props) => {\r\n        console.log(props);\r\n        // if invalid/anonymous user, redirect to LoginForm or current locaiton before redirect to LoginForm, so pass in object\r\n        if (!user)\r\n          return (\r\n            <Redirect\r\n              to={{ pathname: \"/login\", state: { from: props.location } }}\r\n            />\r\n          );\r\n        // either component or render function (more props)\r\n        return Component ? <Component {...props} /> : render(props);\r\n      }}\r\n    ></Route>\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\n\r\n//import { login } from \"../services/authService\";  // import as name function\r\nimport auth from \"../services/authService\"; // import as objecy\r\n\r\nclass LoginForm extends Form {\r\n  state = { data: { username: \"\", password: \"\" }, errors: {} };\r\n  //username = React.createRef(); // not recomend over use this\r\n\r\n  /*  // use autoFocus in the field property\r\n  componentDidMount() {\r\n    this.username.current.focus();\r\n  }\r\n  */\r\n\r\n  doSubmit = async () => {\r\n    // call server\r\n    try {\r\n      console.log(\"Submit login page\");\r\n      const { data } = this.state;\r\n      await auth.login(data.username, data.password);\r\n      //console.log(jwt);\r\n      // store json web token to chrome small db call local storage as key-value pair\r\n      //localStorage.setItem(\"token\", jwt); // localStorage available to all browser\r\n      // direct to home page\r\n      //this.props.history.push(\"/\");\r\n      // need to reload the home page to show current user\r\n      const { state } = this.props.location;\r\n      window.location = state ? state.from.pathname : \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data; // set error from server to username field\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string().required().label(\"Username\"),\r\n    password: Joi.string().required().label(\"Password\"),\r\n  };\r\n\r\n  /*\r\n  validate = () => {\r\n      // move to form.jsx\r\n  }\r\n\r\n  validateProperty = () => {\r\n    // move to form.jxs\r\n  }\r\n  */\r\n\r\n  render() {\r\n    if (auth.getCurrentUser()) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Login form</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {/*\r\n          <Input\r\n            label={\"Password\"}\r\n            name={\"password\"}\r\n            value={data.password}\r\n            error={errors.password}\r\n            onChange={this.handleChange}\r\n          ></Input>\r\n          \r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input\r\n                id=\"password\"\r\n                name=\"password\"\r\n                value={data.password}\r\n                onChange={this.handleChange}\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n              />\r\n            </div>\r\n            */}\r\n          {this.renderButton(\"Login\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import { Component } from \"react\";\r\n//import { logout } from \"../services/authService\";   import as named function\r\nimport auth from \"../services/authService\"; // import as object, pelase see authService,js\r\n\r\nclass Logout extends Component {\r\n  //state = {  }   do not want any state\r\n  componentDidMount() {\r\n    //console.log(\">>>>>>>>>>>>>>>>>>>>>. about to logout \");\r\n    auth.logout();\r\n    window.location = \"/\";\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import http from \"./httpService\";\r\n//import { apiUrl } from \"../config.json\";\r\n\r\nconst apiEndPoint = \"/users\"; //apiUrl + \"/users\";\r\n\r\nexport function register(user) {\r\n  // create a new registration\r\n  return http.post(apiEndPoint, {\r\n    email: user.username,\r\n    password: user.password,\r\n    name: user.name,\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport * as userService from \"../services/userService\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass RegisterForm extends Form {\r\n  state = { data: { username: \"\", password: \"\", name: \"\" }, errors: {} };\r\n\r\n  schema = {\r\n    username: Joi.string().email().required().label(\"Username\"),\r\n    password: Joi.string().min(5).required().label(\"Password\"),\r\n    name: Joi.string().required().label(\"Name\"),\r\n  };\r\n\r\n  //async doSubmit() {\r\n  doSubmit = async () => {\r\n    try {\r\n      console.log(\"Register form being Submitted\");\r\n      const response = await userService.register(this.state.data); // await for promise\r\n      //console.log(response);\r\n      auth.loginWithJwt(response.headers[\"x-auth-token\"]);\r\n      //this.props.history.push(\"/\");\r\n      // need to reload the home page to show current user after registration\r\n      window.location = \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        // bad request\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Register Form (Need to add IsAdmin checkbox later</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderInput(\"name\", \"Name\")}\r\n          {this.renderButton(\"Register\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React, { Component } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport Navbar from \"./components/navbar\";\nimport Movies from \"./components/movies\";\nimport Customers from \"./components/customers\";\nimport Rentals from \"./components/rentals\";\nimport MovieForm from \"./components/movieForm\";\nimport NotFound from \"./components/common/notFound\";\nimport ProtectedRoute from \"./components/common/protectedRoute\";\nimport LoginForm from \"./components/loginForm\";\nimport Logout from \"./components/logout\";\nimport RegisterForm from \"./components/registerForm\";\nimport auth from \"./services/authService\";\n\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    const user = auth.getCurrentUser();\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <Navbar user={user} />\n        <main className=\"container\">\n          <Switch>\n            <Route path=\"/register\" component={RegisterForm}></Route>\n            <Route path=\"/login\" component={LoginForm}></Route>\n            <Route path=\"/logout\" component={Logout}></Route>\n            {/* replaced by ProtectedRoute \n            <Route\n              path=\"/movies/:id\"\n              render={(props) => {\n                if (!user) return <Redirect to=\"/login\" />;\n                return <MovieForm {...props} readOnly={true} />;\n              }}\n            ></Route>\n          */}\n\n            <ProtectedRoute\n              path=\"/movies/:id\"\n              component={MovieForm}\n            ></ProtectedRoute>\n            <Route\n              path=\"/movies\"\n              render={(props) => <Movies {...props} user={this.state.user} />}\n            ></Route>\n            <Route path=\"/customers\" component={Customers}></Route>\n            <Route path=\"/rentals\" component={Rentals}></Route>\n            <Redirect from=\"/\" exact to=\"/movies\"></Redirect>\n            <Route path=\"/not-found\" component={NotFound}></Route>\n            <Redirect to=\"/not-found\"></Redirect>\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\n// <Route path=\"/\" component={Vidly}></Route>\n//<Route to=\"/not-found\" component={NotFound}></Route>\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport \"./index.css\";\nimport \"./App.css\";\nimport \"normalize.css/normalize.css\";  // https://create-react-app.dev/docs/adding-css-reset/\n//import \"./styles/styles.scss\";   // will use later\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-dates/lib/css/_datepicker.css\";\nimport \"react-dates/initialize\";\n//import { css, withStyles, withStylesPropTypes } from 'react-with-styles';\n\n\n//console.log(process.env);  // show all enviroment variable both default and custom one\nconsole.log(\"Application Name:\", process.env.REACT_APP_NAME);\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}